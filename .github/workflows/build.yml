name: Build distribution
on:
    workflow_call:
        inputs:
            config-path:
                required: false
                type: string
jobs:
    build:
        name: Build on ${{ matrix.os }} ðŸ“¦
        runs-on: ${{ matrix.os }}
        
        # The list of runner images can be found on github documentation: https://github.com/actions/runner-images
        strategy:
            matrix:
                os: [
                  ubuntu-22.04,
                  windows-2022, 
                  macos-13
                ]
    
        steps:
            # Checkout code from GitHub
            - uses: actions/checkout@v4

            # You can test your matrix by printing the current Python version
            - name: Display Python version
              run: python -c "import sys; print(sys.version)"

            # Calling cibuildwheel. Most of the options are the default, but explicit is better than implicit.
            - name: Build wheels
              uses: pypa/cibuildwheel@v2.21.3
              env:
                CIBW_BEFORE_BUILD: python -m pip install Cython
                CIBW_BUILD_VERBOSITY: 3
                CIBW_DEBUG_TRACEBACK: TRUE
                CIBW_SKIP: "pp3*"
              with:
                package-dir: .
                output-dir: dist
                config-file: "{package}/pyproject.toml"

            # Upload the artefact so they can be sent to pypi later on.
            - uses: actions/upload-artifact@v4
              with:
                name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
                path: ./dist/*.*
    dist:
      runs-on: "ubuntu-22.04"
      needs: build
      steps:
            # Checkout code from GitHub
            - uses: actions/checkout@v4

            - name: Build the standard distribution (Import Cython)
              run: python -m pip install Cython

            - name: Build the standard distribution (SDist)
              run: python setup.py sdist

            - name: List distribution directory content
              run: ls ./dist

            # Upload the artefact so they can be sent to pypi later on.
            - uses: actions/upload-artifact@v4
              with:
                name: dist
                path: ./dist/*.*              
      
    merge:
      runs-on: ubuntu-latest
      needs: dist
      steps:
        - name: Merge artifacts
          uses: actions/upload-artifact/merge@v4
          with:
            name: python-package-distributions            
